aggregate_gridded_df_to_subnatbound <- function(GADM_subnatbound_df, path.file.to.aggregate){
    ## path.file.to.aggregate <- gridded.livestock.file.names[[1]]
    ## require(dplyr)
    ## Create a temporary environment within the function to hold the
    ## data to be aggregated:
    temp.env <- new.env()
    load(path.file.to.aggregate, envir = temp.env)
    loaded_name <- ls(temp.env)[1]
    data.to.aggregate <- temp.env[[loaded_name]]
    j <- right_join(GADM_subnatbound_df, data.to.aggregate, by=c("x","y"))
    m <- j %>%
        dplyr::filter(!is.na(GADM_subnatbound)) %>%
        dplyr::select(!c(GADM_subnatbound,x,y)) %>%
        dplyr::group_by(iso3,subnatbound) %>%
        dplyr::summarise_all(sum, na.rm = T)
    ## 'use' would be a crop, or a land cover:
    m$use <- names(m)[3]
    ## Units of 'cell.value' can be either ha or metric tons
    names(m)[3] <- 'subnatbound.value'
    m <- with(m, m[, c("use","iso3","subnatbound","subnatbound.value")])
    return(m)
}
aggregate_gridded_df_to_subnatbound <- function(GADM_subnatbound_df, path.file.to.aggregate) {
  # Load data
  temp.env <- new.env()
  load(path.file.to.aggregate, envir = temp.env)
  data.to.aggregate <- temp.env[[ls(temp.env)[1]]]

  # Merge data using data.table for faster joins
  library(data.table)
  setDT(GADM_subnatbound_df)
  setDT(data.to.aggregate)
  j <- data.to.aggregate[GADM_subnatbound_df, on = c("x", "y")]

  # Filter and aggregate using data.table operations
  j <- j[!is.na(GADM_subnatbound)]
  agg_cols <- setdiff(names(j), c("GADM_subnatbound", "x", "y", "iso3", "subnatbound"))
  m <- j[, lapply(.SD, sum, na.rm = TRUE), by = .(iso3, subnatbound), .SDcols = agg_cols]

  # Rename and restructure
  m$use <- names(m)[3]
  setnames(m, 3, "subnatbound.value")
  setcolorder(m, c("use", "iso3", "subnatbound", "subnatbound.value"))

  return(m)
}
